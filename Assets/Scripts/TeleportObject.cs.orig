using System.Collections;
using System.Collections.Generic;
using UnityEngine;

public class TeleportObject : MonoBehaviour
{
    // Start is called before the first frame update
    private OVRInput.Controller activeController;
    public GameObject LeftHand;
    public GameObject RightHand;
    private float prevFlexLeft;
    private float flexLeft;
<<<<<<< HEAD
    private float prevFlexRight;
    private float flexRight;

=======
	private float prevFlexRight;
	private float flexRight;
	
>>>>>>> 6d25f5f1e11fca3d6d9ea3813ebe97c624277039


    void Start()
    {
        prevFlexLeft = 0;
        flexLeft = 0;
<<<<<<< HEAD
        prevFlexRight = 0;
        flexRight = 0;
=======
		prevFlexRight=0;
		flexRight=0;
>>>>>>> 6d25f5f1e11fca3d6d9ea3813ebe97c624277039
    }

    // Update is called once per frame
    void Update()
    {
        prevFlexLeft = flexLeft;
        flexLeft = OVRInput.Get(OVRInput.Axis1D.PrimaryHandTrigger);
<<<<<<< HEAD
        prevFlexRight = flexRight;
=======
		prevFlexRight = flexRight;
>>>>>>> 6d25f5f1e11fca3d6d9ea3813ebe97c624277039
        flexRight = OVRInput.Get(OVRInput.Axis1D.SecondaryHandTrigger);
    }

    private void OnTriggerEnter(Collider collision)
    {
<<<<<<< HEAD
        if (flexLeft > 0.3f && flexLeft > prevFlexLeft && collision.gameObject.layer == 10)
=======
        if (flexLeft> 0.3f && flexLeft>prevFlexLeft  && collision.gameObject.layer==10)
        {
           // activeController = OVRInput.GetActiveController();
            //if (activeController == OVRInput.Controller.LTrackedRemote)
            //{
                collision.gameObject.transform.position = new Vector3(LeftHand.transform.position.x , LeftHand.transform.position.y , LeftHand.transform.position.z );
            //}
            /*else
            {
                collision.gameObject.transform.position = new Vector3(RightHand.transform.position.x , RightHand.transform.position.y , RightHand.transform.position.z );
            }*/

        }
        if (flexRight > 0.3f && flexRight > prevFlexRight && collision.gameObject.layer == 10)
        {
            // activeController = OVRInput.GetActiveController();
            //if (activeController == OVRInput.Controller.LTrackedRemote)
            //{
           // collision.gameObject.transform.position = new Vector3(LeftHand.transform.position.x, LeftHand.transform.position.y, LeftHand.transform.position.z);
            //}
            //else
           // {
                collision.gameObject.transform.position = new Vector3(RightHand.transform.position.x , RightHand.transform.position.y , RightHand.transform.position.z );
           // }

        }

    }

    private void OnTriggerStay(Collider collision)
    {
        if (OVRInput.Get(OVRInput.Axis1D.PrimaryHandTrigger) > 0.3f && collision.gameObject.layer == 10)
>>>>>>> 6d25f5f1e11fca3d6d9ea3813ebe97c624277039
        {
            // activeController = OVRInput.GetActiveController();
            //if (activeController == OVRInput.Controller.LTrackedRemote)
            //{
            collision.gameObject.transform.position = new Vector3(LeftHand.transform.position.x, LeftHand.transform.position.y, LeftHand.transform.position.z);
            //}
            /*else
            {
                collision.gameObject.transform.position = new Vector3(RightHand.transform.position.x , RightHand.transform.position.y , RightHand.transform.position.z );
            }*/

        }
<<<<<<< HEAD
        if (flexRight > 0.3f && flexRight > prevFlexRight && collision.gameObject.layer == 10)
=======
        if (OVRInput.Get(OVRInput.Axis1D.SecondaryHandTrigger) > 0.3f && collision.gameObject.layer == 10)
>>>>>>> 6d25f5f1e11fca3d6d9ea3813ebe97c624277039
        {
            // activeController = OVRInput.GetActiveController();
            //if (activeController == OVRInput.Controller.LTrackedRemote)
            //{
            // collision.gameObject.transform.position = new Vector3(LeftHand.transform.position.x, LeftHand.transform.position.y, LeftHand.transform.position.z);
            //}
            //else
            // {
            collision.gameObject.transform.position = new Vector3(RightHand.transform.position.x, RightHand.transform.position.y, RightHand.transform.position.z);
            // }

        }
<<<<<<< HEAD

    }
}
=======
    }
}
>>>>>>> 6d25f5f1e11fca3d6d9ea3813ebe97c624277039
